// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WalletApi.DAL;

#nullable disable

namespace WalletApi.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20220122165439_SeedData")]
    partial class SeedData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("WalletApi.Entities.Transaction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<int>("Currency")
                        .HasColumnType("int");

                    b.Property<DateTime>("InsertedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("Kind")
                        .HasColumnType("int");

                    b.Property<Guid?>("ReferenceTransactionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Transactions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("16d2dcfe-b89e-11e7-854a-58404eea6d16"),
                            Amount = 364000,
                            Currency = 68,
                            InsertedAt = new DateTime(2022, 1, 22, 18, 54, 39, 240, DateTimeKind.Local).AddTicks(1836),
                            Kind = 0,
                            UserId = new Guid("ca65ca5e-3e01-4693-9324-69ade8268292")
                        });
                });

            modelBuilder.Entity("WalletApi.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Balance")
                        .HasColumnType("int");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Country")
                        .HasColumnType("int");

                    b.Property<int>("Currency")
                        .HasColumnType("int");

                    b.Property<DateTime>("RegistrationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ca65ca5e-3e01-4693-9324-69ade8268292"),
                            Balance = 1000000,
                            BirthDate = new DateTime(1980, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = 20,
                            Currency = 68,
                            RegistrationDate = new DateTime(2022, 1, 21, 18, 54, 39, 240, DateTimeKind.Local).AddTicks(1733),
                            UserName = "user1234"
                        },
                        new
                        {
                            Id = new Guid("b3b2b52a-ab5d-4bee-a15c-cfff0f3dff02"),
                            Balance = 0,
                            BirthDate = new DateTime(1997, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = 64,
                            Currency = 68,
                            RegistrationDate = new DateTime(2022, 1, 20, 18, 54, 39, 240, DateTimeKind.Local).AddTicks(1769),
                            UserName = "user4567"
                        });
                });

            modelBuilder.Entity("WalletApi.Entities.Transaction", b =>
                {
                    b.HasOne("WalletApi.Entities.User", "User")
                        .WithMany("Transactions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("WalletApi.Entities.User", b =>
                {
                    b.Navigation("Transactions");
                });
#pragma warning restore 612, 618
        }
    }
}
